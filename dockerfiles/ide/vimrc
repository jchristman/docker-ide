set nocompatible              " be iMproved, required
set encoding=utf-8
filetype off                  " required

call plug#begin(stdpath('data') . '/plugged')

" Now some IDE stuff
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

" And get dat highlighting and colors
Plug 'altercation/vim-colors-solarized'
Plug 'jparise/vim-graphql'
Plug 'elzr/vim-json'

" Autosave, because losing your changes is for losers
Plug '907th/vim-auto-save'

" Terraform
Plug 'hashivim/vim-terraform'

" HCL
Plug 'b4b4r07/vim-hcl'

" Prettier
Plug 'prettier/vim-prettier', { 'do': 'yarn install --frozen-lockfile --production' }

call plug#end()
filetype plugin indent on    " required

" Use tab for trigger completion with characters ahead and navigate.
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Use <c-space> to trigger completion.
if has('nvim')
  inoremap <silent><expr> <c-space> coc#refresh()
else
  inoremap <silent><expr> <c-@> coc#refresh()
endif

" Prettier auto-format
let g:prettier#autoformat = 1
let g:prettier#autoformat_require_pragma = 0
let g:prettier#exec_cmd_async = 1
let g:prettier#config#single_quote = 'false'
let g:prettier#config#trailing_comma = 'none'

" NERDtree things
let g:nerdtree_tabs_open_on_console_startup=1
let g:NERDTreeWinSize = 40
"let NERDTreeMapOpenInTab='<ENTER>'
nmap \ :NERDTree<CR>
nmap <S-\> :NERDTreeTabsToggle<CR>

" Extra mappings for things like iTerm
map 1;5A <C-Up>
map 1;5B <C-Down>
map 1;5C <C-Right>
map 1;5D <C-Left>
map ^[1;5E <C-.>
nmap <silent> <C-Up> :wincmd k<CR>
nmap <silent> <C-Down> :wincmd j<CR>
nmap <silent> <C-Left> :wincmd h<CR>
nmap <silent> <C-Right> :wincmd l<CR>
nmap <silent> <C-.> :YcmCompleter GetDoc<CR>

" Timestamps
nnoremap <F5> "=strftime("%c -- ")<CR>P
inoremap <F5> <C-R>=strftime("%c -- ")<CR>

" powerline
"set term=xterm-256color
set laststatus=2

" spacing and nicities
set expandtab shiftwidth=4 tabstop=4
autocmd Filetype html setlocal ts=2 sw=2 expandtab
autocmd Filetype ruby setlocal ts=2 sw=2 expandtab
autocmd Filetype javascript setlocal ts=2 sw=2 sts=0 expandtab
set number
set cursorline
set ruler
set nobackup nowb noswapfile
set background=dark
set bs=2
set scrolloff=15
syntax on
set t_Co=256

" Color schemes
set background=dark
colorscheme solarized

" Enable auto save
let g:auto_save = 1
let g:auto_save_events = ["InsertLeave"]

" Terraform configs
let g:terraform_align=1
let g:terraform_fmt_on_save=1

" goes to last line open in file
if has("autocmd")
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
